// -------------------------------------------------------------------
// Mixins
// -------------------------------------------------------------------

// Hover&Active
// -------------------------------------------------------------------
@mixin FHA() {
  #{&}:focus,
  #{&}:hover,
  #{&}:active{
    @content;
  }
}


// MediaQuaries
// -------------------------------------------------------------------
@mixin MQ($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
} @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    + "Please make sure it is defined in `$breakpoints` map.";
  }
}

// Layouts
// -------------------------------------------------------------------
@mixin contentCentering(){
  max-width: $contWidth;
  padding-right: $contSpace;
  padding-left: $contSpace;
  margin-right: auto;
  margin-left: auto;
  @include MQ(md) {
    max-width: 100%;
  }
}

// Text
// -------------------------------------------------------------------
@mixin basicTxt($lh: $lh){
  color: $txtColor;
  font-family: $ff__sans;
  font-size: $fz;
  font-weight: $fw;
  line-height: $lh;
  @include MQ(md){
    font-size: $sp_fz;
    line-height: $sp_lh;
  }
}

@mixin lastPR0(){
  > *:last-child {
    padding-right: 0!important;
  }
}

@mixin lastPB0(){
  > *:last-child {
    padding-bottom: 0!important;
  }
}

@mixin lastMR0(){
  > *:last-child {
    margin-right: 0!important;
  }
}

@mixin lastMB0(){
  > *:last-child {
    margin-bottom: 0!important;
  }
}


@mixin childCol($col:0, $gutter:0, $mq:true){
  $width: (100/$col);
  @if unit($gutter) == '%'{
    width: round-decimal(($width - ($gutter * ($col - 1) / $col)), 3);
    &:nth-of-type(#{$col}n){
      margin-right: 0;
    }
  } @else {
    $magicNumber: $gutter * ($col - 1) / $col;
    width: calc(#{$width}% - #{addPxUnit($magicNumber)});
    &:nth-of-type(#{$col}n){
      margin-right: 0;
    }
  }

  @if $mq{
    @include MQ(md){
      width: 100%;
      margin-right: 0;
    }
  }
}


@mixin chilidCol__inline($display, $clearFloat:false){
  letter-spacing: -.28em;
  text-align: left;

  .gr_col{
    @if $clearFloat{
      float: none;
    }
    display: $display;
    letter-spacing: normal;
    vertical-align: top;
  }
}

@mixin chilidCol__float(){
  .gr_col{
    *zoom: 1;

    &::before,
    &::after {
      content: ' ';
      display: table;
    }
    &::after {
      clear: both;
    }

    .gr_col{
      float: left;
    }
  }
}
